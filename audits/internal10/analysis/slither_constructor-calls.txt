'solc --version' running
'solc ./ProcessBridgedDataArbitrum-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-governance/audits/internal10/analysis/contracts' running
Compilation warnings/errors on ./ProcessBridgedDataArbitrum-flatten.sol:
Warning: Function state mutability can be restricted to view
  --> ProcessBridgedDataArbitrum-flatten.sol:25:5:
   |
25 |     function _verifyData(address target, bytes memory data, uint256 chainId) internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).


'solc --version' running
'solc ./ProcessBridgedDataWormhole-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-governance/audits/internal10/analysis/contracts' running
Compilation warnings/errors on ./ProcessBridgedDataWormhole-flatten.sol:
Warning: Function state mutability can be restricted to view
  --> ProcessBridgedDataWormhole-flatten.sol:25:5:
   |
25 |     function _verifyData(address target, bytes memory data, uint256 chainId) internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).


'solc --version' running
'solc ./GuardCM-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-governance/audits/internal10/analysis/contracts' running
Compilation warnings/errors on ./GuardCM-flatten.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> GuardCM-flatten.sol

Warning: Function state mutability can be restricted to view
  --> GuardCM-flatten.sol:32:5:
   |
32 |     function _verifyData(address target, bytes memory data, uint256 chainId) internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).


'solc --version' running
'solc ./ProcessBridgedDataGnosis-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-governance/audits/internal10/analysis/contracts' running
Compilation warnings/errors on ./ProcessBridgedDataGnosis-flatten.sol:
Warning: Function state mutability can be restricted to view
  --> ProcessBridgedDataGnosis-flatten.sol:25:5:
   |
25 |     function _verifyData(address target, bytes memory data, uint256 chainId) internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).


'solc --version' running
'solc ./ProcessBridgedDataPolygon-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-governance/audits/internal10/analysis/contracts' running
Compilation warnings/errors on ./ProcessBridgedDataPolygon-flatten.sol:
Warning: Function state mutability can be restricted to view
  --> ProcessBridgedDataPolygon-flatten.sol:26:5:
   |
26 |     function _verifyData(address target, bytes memory data, uint256 chainId) internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).


'solc --version' running
'solc ./ProcessBridgedDataOptimism-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-governance/audits/internal10/analysis/contracts' running
Compilation warnings/errors on ./ProcessBridgedDataOptimism-flatten.sol:
Warning: Function state mutability can be restricted to view
  --> ProcessBridgedDataOptimism-flatten.sol:25:5:
   |
25 |     function _verifyData(address target, bytes memory data, uint256 chainId) internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).


INFO:Printers:
INFO:Printers:
INFO:Printers:
#######################
####### GuardCM #######
#######################

## Constructor Call Sequence
	- GuardCM

## Constructor Definitions

### GuardCM

     constructor(
        address _timelock,
        address _multisig,
        address _governor
    ) {
        // Check for zero addresses
        if (_timelock == address(0) || _multisig == address(0) || _governor == address(0)) {
            revert ZeroAddress();
        }
        owner = _timelock;
        multisig = _multisig;
        governor = _governor;
    }

INFO:Printers:
INFO:Printers:
INFO:Printers:
INFO:Slither:. analyzed (20 contracts)
